name: Check Code and Sync main and dev
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'

      - name: Install dependencies
        run: |
          pip install black
          
      - name: Run Black
        id: run_black
        run: |
          black -l 78 -t py312 ./*.py ./wemod
          
      - name: Increment version number
        if: steps.run_black.outcome == 'success'
        run: |
          awk '/script_version = "/ {
            ver = $3;
            ver = substr(ver, 2, length(ver) - 2);
            new_ver = ver + 0.001;
            printf("script_version = \"%.3f\"\n", new_ver);
          }
          !/script_version = "/ { print $0 }' wemod > wemod.tmp && mv wemod.tmp wemod

          current_ver=$(awk '/script_version = "/ {print $3}' wemod | tr -d '"')
          awk -v ver="$current_ver" '/The WeMod Launcher is currently on version / {
            printf("**The WeMod Launcher is currently on version %.3f.**\n", ver);
          }
          !/The WeMod Launcher is currently on version / { print $0 }' readme.md > readme.tmp && mv readme.tmp readme.md
          
      - name: Commit changes on dev
        if: github.ref == 'refs/heads/dev' && steps.run_black.outcome == 'success'
        id: commit_changes_dev
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'Github actions automatic code formatting on dev branch' -m 'This is an automatic task, run by a GitHub workflow, to automatically format the Python code in the repo, with the code formatter "black"' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge dev into main
        if: github.ref == 'refs/heads/dev' && steps.commit_changes_dev.outcome == 'success'
        uses: peter-evans/create-pull-request@v3
        id: create_pr_dev_to_main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto merge/sync branch 'dev' into 'main'"
          branch: "main"
          base: "dev"
          title: "Auto merge/sync branch 'dev' into 'main'"
          body: "This PR was created automatically to merge changes from dev into main."

      - name: Commit changes on main
        if: github.ref == 'refs/heads/main' && steps.run_black.outcome == 'success'
        id: commit_changes_main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'Github actions automatic code formatting on main branch' -m 'This is an automatic task, run by a GitHub workflow, to automatically format the Python code in the repo, with the code formatter "black"' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Merge main into dev
        if: github.ref == 'refs/heads/main' && steps.commit_changes_main.outcome == 'success'
        uses: peter-evans/create-pull-request@v3
        id: create_pr_main_to_dev
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto pull/sync back changes from 'main' into 'dev'"
          branch: "dev"
          base: "main"
          title: "Auto pull/sync back changes from 'main' into 'dev'"
          body: "This PR was created automatically to pull back changes from main into dev."
